import { CommonRouterParams, DateFormat, HmCard, HmCardItem, HmNavBar } from '@hms/basic/Index';
import { DelayParamsType, DelayParamsTypeModel } from '../../models';
import { promptAction, router } from '@kit.ArkUI';
import { delay } from '../../api';

@Entry
@Component
struct Delay {
  @State
  delayForm: DelayParamsTypeModel = new DelayParamsTypeModel({} as DelayParamsType)
  @State
  oldTime: string = ""
  @State
  maxSizeNumber: number = 50

  aboutToAppear() {
    const params = router.getParams() as CommonRouterParams
    if (params && params.id && params.oldTime) {
      this.delayForm.id = params.id
      this.oldTime = params.oldTime
    }
  }

  getBtnEnable() {
    return !!(this.delayForm.id && this.delayForm.delayReason && this.delayForm.delayTime)
  }

  async btnDelay() {
    await delay(this.delayForm)
    promptAction.showToast({ message: '延迟提货成功' })
    router.back()
  }

  build() {
    Column() {
      HmNavBar({ title: '延迟提货' })
      HmCard() {
        HmCardItem({ leftTitle: '原定时间', rightText: this.oldTime, showRightIcon: false })
        HmCardItem({
          leftTitle: '延迟时间', rightText: this.delayForm.delayTime || '请选择', onRightClick: () => {
            DatePickerDialog.show({
              useMilitaryTime: true,
              showTime: true,
              onDateAccept: (value) => {
                this.delayForm.delayTime = DateFormat(value)
              }
            })
          }
        })
        TextArea({ placeholder: '请输入延迟提货原因', text: this.delayForm.delayReason })
          .backgroundColor($r('app.color.background_page'))
          .margin({
            top: 20
          })
          .borderRadius(8)
          .height(130)
          .placeholderColor($r('app.color.text_secondary'))
          .fontSize(14)
          .maxLength(this.maxSizeNumber)
          .onChange((value) => {
            this.delayForm.delayReason = value
          })
        Text(`${this.delayForm.delayReason?.length || 0}/${this.maxSizeNumber}`)
          .margin({
            top: -30
          })
          .textAlign(TextAlign.End)
          .width('100%')
          .padding({ right: 15 })
          .fontColor($r('app.color.text_secondary'))
        Row() {
          Button("提交").height(50).width(207).backgroundColor(this.getBtnEnable() ? $r('app.color.primary') :
          $r('app.color.primary_disabled'))
        }.justifyContent(FlexAlign.Center).padding({
          top: 20,
          bottom: 20
        }).enabled(this.getBtnEnable()).onClick(async () => {
          await this.btnDelay()
        })

      }
    }
    .height('100%').backgroundColor($r('app.color.background_page'))
  }
}